
#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	// СтандартныеПодсистемы.ПодключаемыеКоманды
	ПодключаемыеКоманды.ПриСозданииНаСервере(ЭтотОбъект);
	// Конец СтандартныеПодсистемы.ПодключаемыеКоманды
	
КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	
    // СтандартныеПодсистемы.ПодключаемыеКоманды
    ПодключаемыеКомандыКлиент.НачатьОбновлениеКоманд(ЭтотОбъект);
    // Конец СтандартныеПодсистемы.ПодключаемыеКоманды
	
КонецПроцедуры

&НаСервере
Процедура ПриЧтенииНаСервере(ТекущийОбъект)
	
    // СтандартныеПодсистемы.ПодключаемыеКоманды
    ПодключаемыеКомандыКлиентСервер.ОбновитьКоманды(ЭтотОбъект, Объект);
    // Конец СтандартныеПодсистемы.ПодключаемыеКоманды
	
КонецПроцедуры

&НаКлиенте
Процедура ПослеЗаписи(ПараметрыЗаписи)
    ПодключаемыеКомандыКлиент.ПослеЗаписи(ЭтотОбъект, Объект, ПараметрыЗаписи);
КонецПроцедуры

#КонецОбласти
// {{ 21.09.2025 Сидякина К.С.
&НаКлиенте
Асинх Процедура СсылкаСогласованнаяСкидкаПриИзменении(Элемент)
Режим = РежимДиалогаВопрос.ДаНет;   // Если пользователь ответит нет , возврат не пересчитываем
	Ответ = ЖДАТЬ ВопросАсинх(НСтр("ru = 'Дейтвительно ли пересчитываем все строки табличных частей с учетом скидки?'"), Режим,0);    
    Если Ответ = КодВозвратаДиалога.Нет Тогда
		Возврат;
	КонецЕсли; 

	// Пользователь ответил утвердительно на вопрос о необходимости пересчета
    ПересчетСтрокТЧСоСкидкой(); 
	РассчитатьСуммуДокумента();

КонецПроцедуры

// }} 21.09.2025 Сидякина К.С.
#Область ОбработчикиСобытийЭлементовТаблицыФормыТовары

&НаКлиенте
Процедура ТоварыКоличествоПриИзменении(Элемент)
	
	ТекущиеДанные = Элементы.Товары.ТекущиеДанные;
	
	РассчитатьСуммуСтроки(ТекущиеДанные);
	
КонецПроцедуры

&НаКлиенте
Процедура ТоварыЦенаПриИзменении(Элемент)
	
	ТекущиеДанные = Элементы.Товары.ТекущиеДанные;
	
	РассчитатьСуммуСтроки(ТекущиеДанные);
	
КонецПроцедуры

&НаКлиенте
Процедура ТоварыПриИзменении(Элемент)
	РассчитатьСуммуДокумента();
КонецПроцедуры

&НаКлиенте
Процедура ТоварыСкидкаПриИзменении(Элемент)
	
	ТекущиеДанные = Элементы.Товары.ТекущиеДанные;
	
	РассчитатьСуммуСтроки(ТекущиеДанные);
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовТаблицыФормыУслуги

&НаКлиенте
Процедура УслугиКоличествоПриИзменении(Элемент)
	
	ТекущиеДанные = Элементы.Услуги.ТекущиеДанные;
	
	РассчитатьСуммуСтроки(ТекущиеДанные);
	
КонецПроцедуры

&НаКлиенте
Процедура УслугиЦенаПриИзменении(Элемент)
	
	ТекущиеДанные = Элементы.Услуги.ТекущиеДанные;
	
	РассчитатьСуммуСтроки(ТекущиеДанные);
	
КонецПроцедуры

&НаКлиенте
Процедура УслугиСкидкаПриИзменении(Элемент)
	
	ТекущиеДанные = Элементы.Услуги.ТекущиеДанные;
	
	РассчитатьСуммуСтроки(ТекущиеДанные);
	
КонецПроцедуры

&НаКлиенте
Процедура УслугиПриИзменении(Элемент)
	РассчитатьСуммуДокумента();
КонецПроцедуры

#КонецОбласти

// {{ 21.09.2025 Сидякина К.С.
&НаКлиенте
Процедура ПересчитатьСоСкидкой(Команда)
	Если Объект.Товары.Количество()=0 И Объект.Услуги.Количество() = 0 Тогда       // если пустые ТЧ нечего пересчитывать
		Возврат;	
	КонецЕсли;       
	
	//Товары
	Если Объект.Товары.Количество() <> 0 Тогда 
		Если Объект.СогласованнаяСкидка <> 0  Тогда
			Для Каждого Строка Из Объект.Товары Цикл 
				Строка.Сумма = Строка.Цена*Строка.Количество - (Строка.Цена*Строка.Количество* Объект.СогласованнаяСкидка /100);	
			КонецЦикла;
		Иначе
			Для Каждого Строка Из Объект.Товары Цикл 
				Строка.Сумма = Строка.Цена*Строка.Количество;	
			КонецЦикла;
			
		КонецЕсли; 		
	КонецЕсли;	
	// Услуги
	Если Объект.Услуги.Количество() <> 0 Тогда 
		Если Объект.СогласованнаяСкидка <> 0  Тогда
			Для Каждого Строка Из Объект.Услуги Цикл 
				Строка.Сумма = Строка.Цена*Строка.Количество - (Строка.Цена*Строка.Количество* Объект.СогласованнаяСкидка /100);	
			КонецЦикла;
		Иначе
			Для Каждого Строка Из Объект.Услуги Цикл 
				Строка.Сумма = Строка.Цена*Строка.Количество;	
			КонецЦикла;
			
		КонецЕсли; 		
	КонецЕсли;
	РассчитатьСуммуДокумента();
	
КонецПроцедуры
// }} 21.09.2025 Сидякина К.С.

#Область СлужебныеПроцедурыИФункции

&НаКлиенте
Процедура РассчитатьСуммуСтроки(ТекущиеДанные)
	
	КоэффициентСкидки = 1 - ТекущиеДанные.Скидка / 100;
	ТекущиеДанные.Сумма = ТекущиеДанные.Цена * ТекущиеДанные.Количество * КоэффициентСкидки;
	// {{ 21.09.2025 Сидякина К.С.
	Если Объект.СогласованнаяСкидка <> 0 Тогда
		ТекущиеДанные.Сумма = ТекущиеДанные.Цена * ТекущиеДанные.Количество * КоэффициентСкидки;		
	Иначе
		ТекущиеДанные.Сумма = ТекущиеДанные.Цена * ТекущиеДанные.Количество; 
	КонецЕсли;	 
	РассчитатьСуммуДокумента();
	// }} 21.09.2025 Сидякина К.С.
	
КонецПроцедуры

&НаКлиенте
Процедура РассчитатьСуммуДокумента()
	
	Объект.СуммаДокумента = Объект.Товары.Итог("Сумма") + Объект.Услуги.Итог("Сумма");
	
КонецПроцедуры

#Область ПодключаемыеКоманды

// СтандартныеПодсистемы.ПодключаемыеКоманды
&НаКлиенте
Процедура Подключаемый_ВыполнитьКоманду(Команда)
    ПодключаемыеКомандыКлиент.НачатьВыполнениеКоманды(ЭтотОбъект, Команда, Объект);
КонецПроцедуры

&НаКлиенте
Процедура Подключаемый_ПродолжитьВыполнениеКомандыНаСервере(ПараметрыВыполнения, ДополнительныеПараметры) Экспорт
    ВыполнитьКомандуНаСервере(ПараметрыВыполнения);
КонецПроцедуры

&НаСервере
Процедура ВыполнитьКомандуНаСервере(ПараметрыВыполнения)
    ПодключаемыеКоманды.ВыполнитьКоманду(ЭтотОбъект, ПараметрыВыполнения, Объект);
КонецПроцедуры

&НаКлиенте
Процедура Подключаемый_ОбновитьКоманды()
    ПодключаемыеКомандыКлиентСервер.ОбновитьКоманды(ЭтотОбъект, Объект);
КонецПроцедуры
// Конец СтандартныеПодсистемы.ПодключаемыеКоманды

#КонецОбласти

#КонецОбласти
